#!/usr/bin/env bash

set -euo pipefail

__cnb_shim__export_file=${1:-}
__cnb_shim__platform_dir=${2:-}
__cnb_shim__envs_dir=${3:-}

if [[ -z $__cnb_shim__export_file || -z $__cnb_shim__platform_dir || -z $__cnb_shim__envs_dir ]]; then
    echo "usage: exports <export file> <platform dir> <envs dir>" >&2
    exit 1
fi

if [[ ! -f "$__cnb_shim__export_file" ]]; then
    echo "$__cnb_shim__export_file does not exist, skipping" >&2
    exit 0
fi

if [[ ! -d "$__cnb_shim__envs_dir" ]]; then
    echo "$__cnb_shim__envs_dir is not a valid directory" >&2
    exit 1
fi

# save current env vars
unset IFS
declare -A __cnb_shim__envs_before
for var in $(compgen -e); do
    __cnb_shim__envs_before[$var]=${!var}
done

# source the export file
set +euo pipefail
# shellcheck disable=SC1090
. "$__cnb_shim__export_file"
set -euo pipefail

# export new/changed env vars
unset IFS
for var in $(compgen -e); do
    if [[ ! -v __cnb_shim__envs_before[$var] ]]; then
        # new var, write it
        echo -n "${!var}" >"${__cnb_shim__envs_dir}/${var}.override"
        continue
    fi

    # existing var, check if value is different
    if [[ ${__cnb_shim__envs_before[$var]} != "${!var}" ]]; then
        echo -n "${!var}" >"${__cnb_shim__envs_dir}/${var}.override"
    fi
done
